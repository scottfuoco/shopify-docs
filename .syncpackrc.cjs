// @ts-check

// @ts-check
import { readFileSync } from "node:fs";
import { parse } from "yaml";

const getPnpmCatalogDependencies = () => {
  const workspaceConfig = readFileSync("pnpm-workspace.yaml", "utf8");
  const pnpmWorkspaceConfig = parse(workspaceConfig);

  return Object.keys(pnpmWorkspaceConfig.catalog);
};

/** @type {import("syncpack").RcFile} */
const config = {
  customTypes: {
    engines: {
      path: "engines",
      strategy: "versionsByName",
    },
    packageManager: {
      path: "packageManager",
      strategy: "name@version",
    },
  },
  indent: "  ",
  semverRange: "",
  dependencyTypes: ["dev", "overrides", "peer", "pnpmOverrides", "prod", "resolutions"],
  source: ["package.json", "apps/*/package.json", "packages/*/package.json"],
  sortAz: ["contributors", "dependencies", "devDependencies", "keywords", "peerDependencies", "resolutions", "scripts"],
  // https://github.com/keithamus/sort-package-json/blob/master/defaultRules.md
  sortFirst: [
    "$schema",
    "name",
    "displayName",
    "version",
    "private",
    "description",
    "categories",
    "keywords",
    "homepage",
    "bugs",
    "repository",
    "funding",
    "license",
    "qna",
    "author",
    "maintainers",
    "contributors",
    "publisher",
    "sideEffects",
    "type",
    "imports",
    "exports",
    "main",
    "svelte",
    "umd:main",
    "jsdelivr",
    "unpkg",
    "module",
    "source",
    "jsnext:main",
    "browser",
    "react-native",
    "types",
    "typesVersions",
    "typings",
    "style",
    "example",
    "examplestyle",
    "assets",
    "bin",
    "man",
    "directories",
    "files",
    "workspaces",
    "binary",
    "linaria",
    "scripts",
    "betterScripts",
    "contributes",
    "activationEvents",
    "husky",
    "simple-git-hooks",
    "pre-commit",
    "commitlint",
    "lint-staged",
    "config",
    "nodemonConfig",
    "browserify",
    "babel",
    "browserslist",
    "xo",
    "prettier",
    "eslintConfig",
    "eslintIgnore",
    "npmpackagejsonlint",
    "release",
    "remarkConfig",
    "stylelint",
    "ava",
    "jest",
    "mocha",
    "nyc",
    "tap",
    "resolutions",
    "dependencies",
    "devDependencies",
    "dependenciesMeta",
    "peerDependencies",
    "peerDependenciesMeta",
    "optionalDependencies",
    "bundledDependencies",
    "bundleDependencies",
    "extensionPack",
    "extensionDependencies",
    "flat",
    "packageManager",
    "engines",
    "engineStrict",
    "volta",
    "languageName",
    "os",
    "cpu",
    "preferGlobal",
    "publishConfig",
    "icon",
    "badges",
    "galleryBanner",
    "preview",
    "markdown",
    "tsup",
  ],
  versionGroups: [
    {
      label: "Enforce pnpm default catalog",
      dependencies: getPnpmCatalogDependencies(),
      dependencyTypes: ["!local"],
      pinVersion: "catalog:",
    },
    {
      label: "Please use dayjs as your date library",
      packages: ["**"],
      dependencies: ["moment", "date-fns", "luxon"],
      isBanned: true,
    },
    {
      // Banned
      label: "Please use @mobily/ts-belt or radash instead",
      packages: ["**"],
      dependencies: ["lodash", "underscore", "lodash/es"],
      isBanned: true,
    },
  ],
};

module.exports = config;
